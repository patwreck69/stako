// user_stake_tracker.rs
// Tracks individual user stake positions in Stako staking pools

use anchor_lang::prelude::*;
use solana_program::pubkey::Pubkey;

#[program]
pub mod user_stake_tracker {
    use super::*;

    pub fn track_user_stake(ctx: Context<TrackUserStake>, amount: u64) -> Result<()> {
        let user_stake = &mut ctx.accounts.user_stake;
        user_stake.amount += amount;
        user_stake.start_time = Clock::get()?.unix_timestamp as u64;
        msg!("User {} staked {} tokens", user_stake.user, amount);
        Ok(())
    }

    pub fn get_user_stake(ctx: Context<GetUserStake>) -> Result<()> {
        let user_stake = &ctx.accounts.user_stake;
        msg!("User {} has {} tokens staked", user_stake.user, user_stake.amount);
        Ok(())
    }
}

#[derive(Accounts)]
pub struct TrackUserStake<'info> {
    #[account(mut)]
    pub user_stake: Account<'info, UserStake>,
}

#[derive(Accounts)]
pub struct GetUserStake<'info> {
    #[account(mut)]
    pub user_stake: Account<'info, UserStake>,
}

#[account]
pub struct UserStake {
    pub user: Pubkey,
    pub amount: u64,
    pub start_time: u64,
}
